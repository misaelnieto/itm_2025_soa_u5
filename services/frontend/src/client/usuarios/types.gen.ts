// This file is auto-generated by @hey-api/openapi-ts

export type ApiKey = ApiKeyConcealed & {
    value: string;
};

export type ApiKeyConcealed = {
    created_at: string;
    creator_user_id: (string) | null;
    id: string;
    last_used_at: (string) | null;
    updated_at: string;
};

export type CursorResponse = {
    end_cursor: (string) | null;
    has_next_page: (boolean) | null;
    has_previous_page: (boolean) | null;
    start_cursor: (string) | null;
};

export type Organization = {
    created_at: string;
    creator_user_id: (string) | null;
    id: string;
    name: string;
    slug: string;
    updated_at: string;
};

export type Project = {
    created_at: string;
    creator_user_id: (string) | null;
    default_branch: (string) | null;
    id: string;
    name: string;
    organization_id: string;
    slug: string;
    updated_at: string;
};

export type Role = {
    created_at: string;
    id: string;
    organization_id: string;
    status: 'active' | 'invited' | 'suspended';
    updated_at: string;
    user_id: string;
};

export type status = 'active' | 'invited' | 'suspended';

export type Specification = {
    api_key_id: (string) | null;
    actor: (string) | null;
    actor_id: (string) | null;
    branch: (string) | null;
    branch_base: (string) | null;
    ci_platform: (string) | null;
    commit_sha: (string) | null;
    creator_user_id: (string) | null;
    created_at: string;
    event_name: (string) | null;
    id: string;
    job: (string) | null;
    project_id: string;
    ref: (string) | null;
    ref_type: (string) | null;
    repository: (string) | null;
    run_id: (string) | null;
    run_number: (string) | null;
    updated_at: string;
    tags: Array<(string)>;
    version: (string) | null;
    workflow: (string) | null;
};

export type User = {
    clerk_user_id: (string) | null;
    created_at: string;
    email: (string) | null;
    first_name: (string) | null;
    id: string;
    image_url: (string) | null;
    last_name: (string) | null;
    roles?: Array<Role>;
    updated_at: string;
};

export type Waitlist = {
    created_at: string;
    feature: WaitlistFeature;
    id: string;
    updated_at: string;
};

export type WaitlistFeature = 'analytics' | 'changelogs' | 'integrations' | 'mcp' | 'mocks' | 'sdks' | 'tests';

export type Webhook = WebhookConcealed & {
    secret: string;
};

export type WebhookConcealed = {
    created_at: string;
    creator_user_id: (string) | null;
    endpoint: string;
    id: string;
    is_enabled: boolean;
    project_id: string;
    updated_at: string;
};

export type GetResponse = (string);

export type GetError = unknown;

export type GetV1GetByOrganizationSlugByProjectSlugData = {
    path: {
        organization_slug: string;
        project_slug: string;
    };
    query?: {
        api_key?: string;
        branch?: string;
        commit_sha?: string;
        inline?: boolean;
        latest?: boolean;
        tags?: string;
        version?: string;
    };
};

export type GetV1GetByOrganizationSlugByProjectSlugResponse = ({
    [key: string]: unknown;
});

export type GetV1GetByOrganizationSlugByProjectSlugError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1InternalSyncUsersResponse = ({
    numAffectedRows: string;
});

export type PostV1InternalSyncUsersError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1InternalWebhooksClerkData = {
    body: ({
    data: {
        created_at: number;
        email_addresses: Array<{
            created_at: number;
            email_address: string;
            id: string;
            linked_to: Array<{
                id: string;
                type: string;
            }>;
            updated_at: number;
            verification: {
                attempts: (number) | null;
                expire_at: (number) | null;
                status: string;
                strategy: string;
            };
        }>;
        first_name: (string) | null;
        has_image: boolean;
        id: string;
        image_url: (string) | null;
        last_active_at: (number) | null;
        last_name: (string) | null;
        last_sign_in_at: (number) | null;
        mfa_disabled_at: (number) | null;
        mfa_enabled_at: (number) | null;
        passkeys: Array<{
            [key: string]: unknown;
        }>;
        password_enabled: boolean;
        phone_numbers: Array<{
            [key: string]: unknown;
        }>;
        primary_email_address_id: (string) | null;
        primary_phone_number_id: (string) | null;
        profile_image_url: (string) | null;
        two_factor_enabled: boolean;
        updated_at: number;
        username: (string) | null;
    };
    type: 'user.created' | 'user.updated';
} | {
    data: {
        deleted: boolean;
        id: string;
    };
    type: 'user.deleted';
} | {
    data: {
        id: string;
    };
    type: 'organization.created' | 'organization.updated';
} | {
    data: {
        id: string;
    };
    type: 'organization.deleted';
} | {
    data: {
        id: string;
    };
    type: 'organizationMembership.created' | 'organizationMembership.updated';
} | {
    data: {
        id: string;
    };
    type: 'organizationMembership.deleted';
} | {
    data: {
        [key: string]: unknown;
    };
    type: 'role.created' | 'role.updated';
} | {
    data: {
        [key: string]: unknown;
    };
    type: 'role.deleted';
});
};

export type PostV1InternalWebhooksClerkResponse = ({
    message: string;
});

export type PostV1InternalWebhooksClerkError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1InternalWebhooksHeyApiData = {
    body: {
        data: Specification;
        id: string;
        object: 'event';
        timestamp: number;
        type: 'specification.created' | 'specification.deleted';
    };
};

export type PostV1InternalWebhooksHeyApiResponse = ({
    message: string;
});

export type PostV1InternalWebhooksHeyApiError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1OrganizationsData = {
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
};

export type GetV1OrganizationsResponse = ({
    filters: CursorResponse;
    items: Array<Organization>;
});

export type GetV1OrganizationsError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1OrganizationsData = {
    body: {
        name: string;
    };
};

export type PostV1OrganizationsResponse = (Organization);

export type PostV1OrganizationsError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type DeleteV1OrganizationsByOrganizationSlugData = {
    path: {
        organization_slug: string;
    };
};

export type DeleteV1OrganizationsByOrganizationSlugResponse = (Organization);

export type DeleteV1OrganizationsByOrganizationSlugError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1OrganizationsByOrganizationSlugMembersData = {
    path: {
        organization_slug: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
};

export type GetV1OrganizationsByOrganizationSlugMembersResponse = ({
    filters: CursorResponse;
    items: Array<User>;
});

export type GetV1OrganizationsByOrganizationSlugMembersError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1OrganizationsByOrganizationSlugMembersData = {
    body: {
        emails: Array<(string)>;
    };
    path: {
        organization_slug: string;
    };
};

export type PostV1OrganizationsByOrganizationSlugMembersResponse = ({
    users: Array<User>;
});

export type PostV1OrganizationsByOrganizationSlugMembersError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type DeleteV1OrganizationsByOrganizationSlugMembersByUserIdData = {
    path: {
        organization_slug: string;
        user_id: string;
    };
};

export type DeleteV1OrganizationsByOrganizationSlugMembersByUserIdResponse = (Role);

export type DeleteV1OrganizationsByOrganizationSlugMembersByUserIdError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1OrganizationsByOrganizationSlugProjectsData = {
    path: {
        organization_slug: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsResponse = ({
    filters: CursorResponse;
    items: Array<Project>;
});

export type GetV1OrganizationsByOrganizationSlugProjectsError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1OrganizationsByOrganizationSlugProjectsData = {
    body: {
        name: string;
    };
    path: {
        organization_slug: string;
    };
};

export type PostV1OrganizationsByOrganizationSlugProjectsResponse = (Project);

export type PostV1OrganizationsByOrganizationSlugProjectsError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugData = {
    path: {
        organization_slug: string;
        project_slug: string;
    };
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugResponse = (Project);

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysData = {
    path: {
        organization_slug: string;
        project_slug: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse = ({
    filters: CursorResponse;
    items: Array<ApiKeyConcealed>;
});

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysData = {
    path: {
        organization_slug: string;
        project_slug: string;
    };
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse = (ApiKey);

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdData = {
    path: {
        api_key_id: string;
        organization_slug: string;
        project_slug: string;
    };
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse = (ApiKey);

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdData = {
    path: {
        api_key_id: string;
        organization_slug: string;
        project_slug: string;
    };
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse = (ApiKey);

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsData = {
    path: {
        organization_slug: string;
        project_slug: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsResponse = ({
    filters: CursorResponse;
    items: Array<Specification>;
});

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdData = {
    path: {
        organization_slug: string;
        project_slug: string;
        specification_id: string;
    };
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse = (Specification);

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdData = {
    path: {
        organization_slug: string;
        project_slug: string;
        specification_id: string;
    };
    query?: {
        inline?: boolean;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse = ({
    [key: string]: unknown;
});

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlData = {
    path: {
        organization_slug: string;
        project_slug: string;
        specification_id: string;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlResponse = ({
    url: string;
});

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksData = {
    path: {
        organization_slug: string;
        project_slug: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse = ({
    filters: CursorResponse;
    items: Array<WebhookConcealed>;
});

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksData = {
    body: {
        endpoint: string;
    };
    path: {
        organization_slug: string;
        project_slug: string;
    };
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse = (Webhook);

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData = {
    path: {
        organization_slug: string;
        project_slug: string;
        webhook_id: string;
    };
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse = (ApiKey);

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData = {
    path: {
        organization_slug: string;
        project_slug: string;
        webhook_id: string;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse = (WebhookConcealed);

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData = {
    path: {
        organization_slug: string;
        project_slug: string;
        webhook_id: string;
    };
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse = (Webhook);

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1SpecificationsData = {
    body: {
        actor?: string;
        actor_id?: string;
        branch?: string;
        branch_base?: string;
        ci_platform?: string;
        commit_sha?: string;
        default_branch?: string;
        dry_run?: string;
        event_name?: string;
        job?: string;
        ref?: string;
        ref_type?: string;
        repository?: string;
        run_id?: string;
        run_number?: string;
        specification: (Blob | File);
        tags?: string;
        workflow?: string;
    };
};

export type PostV1SpecificationsResponse = (Specification);

export type PostV1SpecificationsError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1UsersMeResponse = (User);

export type GetV1UsersMeError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1UsersByUserIdApiKeysData = {
    path: {
        user_id: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
};

export type GetV1UsersByUserIdApiKeysResponse = ({
    filters: CursorResponse;
    items: Array<ApiKeyConcealed>;
});

export type GetV1UsersByUserIdApiKeysError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1UsersByUserIdApiKeysData = {
    path: {
        user_id: string;
    };
};

export type PostV1UsersByUserIdApiKeysResponse = (ApiKey);

export type PostV1UsersByUserIdApiKeysError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type DeleteV1UsersByUserIdApiKeysByApiKeyIdData = {
    path: {
        api_key_id: string;
        user_id: string;
    };
};

export type DeleteV1UsersByUserIdApiKeysByApiKeyIdResponse = (ApiKey);

export type DeleteV1UsersByUserIdApiKeysByApiKeyIdError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1UsersByUserIdApiKeysByApiKeyIdData = {
    path: {
        api_key_id: string;
        user_id: string;
    };
};

export type PostV1UsersByUserIdApiKeysByApiKeyIdResponse = (ApiKey);

export type PostV1UsersByUserIdApiKeysByApiKeyIdError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1UsersByUserIdRolesData = {
    path: {
        user_id: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
};

export type GetV1UsersByUserIdRolesResponse = ({
    filters: CursorResponse;
    items: Array<Role>;
});

export type GetV1UsersByUserIdRolesError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type GetV1UsersByUserIdWaitlistsData = {
    path: {
        user_id: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
};

export type GetV1UsersByUserIdWaitlistsResponse = ({
    filters: CursorResponse;
    items: Array<Waitlist>;
});

export type GetV1UsersByUserIdWaitlistsError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type PostV1UsersByUserIdWaitlistsData = {
    body: {
        feature: WaitlistFeature;
    };
    path: {
        user_id: string;
    };
};

export type PostV1UsersByUserIdWaitlistsResponse = (Waitlist);

export type PostV1UsersByUserIdWaitlistsError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});

export type DeleteV1UsersByUserIdWaitlistsByWaitlistIdData = {
    path: {
        user_id: string;
        waitlist_id: string;
    };
};

export type DeleteV1UsersByUserIdWaitlistsByWaitlistIdResponse = (Waitlist);

export type DeleteV1UsersByUserIdWaitlistsByWaitlistIdError = ({
    error: {
        message: string;
        request_id: string;
        status: number;
        timestamp: string;
    };
});