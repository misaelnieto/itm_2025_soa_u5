// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser, formDataBodySerializer } from '@hey-api/client-fetch';
import type { GetError, GetResponse, GetV1GetByOrganizationSlugByProjectSlugData, GetV1GetByOrganizationSlugByProjectSlugError, GetV1GetByOrganizationSlugByProjectSlugResponse, PostV1InternalSyncUsersError, PostV1InternalSyncUsersResponse, PostV1InternalWebhooksClerkData, PostV1InternalWebhooksClerkError, PostV1InternalWebhooksClerkResponse, PostV1InternalWebhooksHeyApiData, PostV1InternalWebhooksHeyApiError, PostV1InternalWebhooksHeyApiResponse, GetV1OrganizationsData, GetV1OrganizationsError, GetV1OrganizationsResponse, PostV1OrganizationsData, PostV1OrganizationsError, PostV1OrganizationsResponse, DeleteV1OrganizationsByOrganizationSlugData, DeleteV1OrganizationsByOrganizationSlugError, DeleteV1OrganizationsByOrganizationSlugResponse, GetV1OrganizationsByOrganizationSlugMembersData, GetV1OrganizationsByOrganizationSlugMembersError, GetV1OrganizationsByOrganizationSlugMembersResponse, PostV1OrganizationsByOrganizationSlugMembersData, PostV1OrganizationsByOrganizationSlugMembersError, PostV1OrganizationsByOrganizationSlugMembersResponse, DeleteV1OrganizationsByOrganizationSlugMembersByUserIdData, DeleteV1OrganizationsByOrganizationSlugMembersByUserIdError, DeleteV1OrganizationsByOrganizationSlugMembersByUserIdResponse, GetV1OrganizationsByOrganizationSlugProjectsData, GetV1OrganizationsByOrganizationSlugProjectsError, GetV1OrganizationsByOrganizationSlugProjectsResponse, PostV1OrganizationsByOrganizationSlugProjectsData, PostV1OrganizationsByOrganizationSlugProjectsError, PostV1OrganizationsByOrganizationSlugProjectsResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugData, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugError, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysData, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysError, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysData, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysError, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdData, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdError, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdData, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdError, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsData, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsError, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdData, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdError, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdData, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdError, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlData, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlError, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksData, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksError, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksData, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksError, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, PostV1SpecificationsData, PostV1SpecificationsError, PostV1SpecificationsResponse, GetV1UsersMeError, GetV1UsersMeResponse, GetV1UsersByUserIdApiKeysData, GetV1UsersByUserIdApiKeysError, GetV1UsersByUserIdApiKeysResponse, PostV1UsersByUserIdApiKeysData, PostV1UsersByUserIdApiKeysError, PostV1UsersByUserIdApiKeysResponse, DeleteV1UsersByUserIdApiKeysByApiKeyIdData, DeleteV1UsersByUserIdApiKeysByApiKeyIdError, DeleteV1UsersByUserIdApiKeysByApiKeyIdResponse, PostV1UsersByUserIdApiKeysByApiKeyIdData, PostV1UsersByUserIdApiKeysByApiKeyIdError, PostV1UsersByUserIdApiKeysByApiKeyIdResponse, GetV1UsersByUserIdRolesData, GetV1UsersByUserIdRolesError, GetV1UsersByUserIdRolesResponse, GetV1UsersByUserIdWaitlistsData, GetV1UsersByUserIdWaitlistsError, GetV1UsersByUserIdWaitlistsResponse, PostV1UsersByUserIdWaitlistsData, PostV1UsersByUserIdWaitlistsError, PostV1UsersByUserIdWaitlistsResponse, DeleteV1UsersByUserIdWaitlistsByWaitlistIdData, DeleteV1UsersByUserIdWaitlistsByWaitlistIdError, DeleteV1UsersByUserIdWaitlistsByWaitlistIdResponse } from './types.gen';

export const client = createClient(createConfig());

export const get = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetResponse, GetError, ThrowOnError>({
        ...options,
        url: '/'
    });
};

export const getV1GetByOrganizationSlugByProjectSlug = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetV1GetByOrganizationSlugByProjectSlugData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1GetByOrganizationSlugByProjectSlugResponse, GetV1GetByOrganizationSlugByProjectSlugError, ThrowOnError>({
        ...options,
        url: '/v1/get/{organization_slug}/{project_slug}'
    });
};

export const postV1InternalSyncUsers = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1InternalSyncUsersResponse, PostV1InternalSyncUsersError, ThrowOnError>({
        ...options,
        url: '/v1/internal/sync-users'
    });
};

export const postV1InternalWebhooksClerk = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1InternalWebhooksClerkData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1InternalWebhooksClerkResponse, PostV1InternalWebhooksClerkError, ThrowOnError>({
        ...options,
        url: '/v1/internal/webhooks/clerk'
    });
};

export const postV1InternalWebhooksHeyApi = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1InternalWebhooksHeyApiData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1InternalWebhooksHeyApiResponse, PostV1InternalWebhooksHeyApiError, ThrowOnError>({
        ...options,
        url: '/v1/internal/webhooks/hey-api'
    });
};

export const getV1Organizations = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetV1OrganizationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1OrganizationsResponse, GetV1OrganizationsError, ThrowOnError>({
        ...options,
        url: '/v1/organizations'
    });
};

export const postV1Organizations = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1OrganizationsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1OrganizationsResponse, PostV1OrganizationsError, ThrowOnError>({
        ...options,
        url: '/v1/organizations'
    });
};

export const deleteV1OrganizationsByOrganizationSlug = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteV1OrganizationsByOrganizationSlugData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteV1OrganizationsByOrganizationSlugResponse, DeleteV1OrganizationsByOrganizationSlugError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}'
    });
};

export const getV1OrganizationsByOrganizationSlugMembers = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetV1OrganizationsByOrganizationSlugMembersData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1OrganizationsByOrganizationSlugMembersResponse, GetV1OrganizationsByOrganizationSlugMembersError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/members'
    });
};

export const postV1OrganizationsByOrganizationSlugMembers = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1OrganizationsByOrganizationSlugMembersData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1OrganizationsByOrganizationSlugMembersResponse, PostV1OrganizationsByOrganizationSlugMembersError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/members'
    });
};

export const deleteV1OrganizationsByOrganizationSlugMembersByUserId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteV1OrganizationsByOrganizationSlugMembersByUserIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteV1OrganizationsByOrganizationSlugMembersByUserIdResponse, DeleteV1OrganizationsByOrganizationSlugMembersByUserIdError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/members/{user_id}'
    });
};

export const getV1OrganizationsByOrganizationSlugProjects = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetV1OrganizationsByOrganizationSlugProjectsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1OrganizationsByOrganizationSlugProjectsResponse, GetV1OrganizationsByOrganizationSlugProjectsError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects'
    });
};

export const postV1OrganizationsByOrganizationSlugProjects = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1OrganizationsByOrganizationSlugProjectsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1OrganizationsByOrganizationSlugProjectsResponse, PostV1OrganizationsByOrganizationSlugProjectsError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects'
    });
};

export const deleteV1OrganizationsByOrganizationSlugProjectsByProjectSlug = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}'
    });
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeys = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/api-keys'
    });
};

export const postV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeys = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/api-keys'
    });
};

export const deleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/api-keys/{api_key_id}'
    });
};

export const postV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/api-keys/{api_key_id}'
    });
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecifications = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/specifications'
    });
};

export const deleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/specifications/{specification_id}'
    });
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/specifications/{specification_id}'
    });
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrl = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/specifications/{specification_id}/url'
    });
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooks = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks'
    });
};

export const postV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooks = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks'
    });
};

export const deleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks/{webhook_id}'
    });
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks/{webhook_id}'
    });
};

export const postV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError, ThrowOnError>({
        ...options,
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks/{webhook_id}'
    });
};

export const postV1Specifications = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1SpecificationsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1SpecificationsResponse, PostV1SpecificationsError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/v1/specifications'
    });
};

export const getV1UsersMe = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1UsersMeResponse, GetV1UsersMeError, ThrowOnError>({
        ...options,
        url: '/v1/users/me'
    });
};

export const getV1UsersByUserIdApiKeys = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetV1UsersByUserIdApiKeysData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1UsersByUserIdApiKeysResponse, GetV1UsersByUserIdApiKeysError, ThrowOnError>({
        ...options,
        url: '/v1/users/{user_id}/api-keys'
    });
};

export const postV1UsersByUserIdApiKeys = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1UsersByUserIdApiKeysData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1UsersByUserIdApiKeysResponse, PostV1UsersByUserIdApiKeysError, ThrowOnError>({
        ...options,
        url: '/v1/users/{user_id}/api-keys'
    });
};

export const deleteV1UsersByUserIdApiKeysByApiKeyId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteV1UsersByUserIdApiKeysByApiKeyIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteV1UsersByUserIdApiKeysByApiKeyIdResponse, DeleteV1UsersByUserIdApiKeysByApiKeyIdError, ThrowOnError>({
        ...options,
        url: '/v1/users/{user_id}/api-keys/{api_key_id}'
    });
};

export const postV1UsersByUserIdApiKeysByApiKeyId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1UsersByUserIdApiKeysByApiKeyIdData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1UsersByUserIdApiKeysByApiKeyIdResponse, PostV1UsersByUserIdApiKeysByApiKeyIdError, ThrowOnError>({
        ...options,
        url: '/v1/users/{user_id}/api-keys/{api_key_id}'
    });
};

export const getV1UsersByUserIdRoles = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetV1UsersByUserIdRolesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1UsersByUserIdRolesResponse, GetV1UsersByUserIdRolesError, ThrowOnError>({
        ...options,
        url: '/v1/users/{user_id}/roles'
    });
};

export const getV1UsersByUserIdWaitlists = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetV1UsersByUserIdWaitlistsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetV1UsersByUserIdWaitlistsResponse, GetV1UsersByUserIdWaitlistsError, ThrowOnError>({
        ...options,
        url: '/v1/users/{user_id}/waitlists'
    });
};

export const postV1UsersByUserIdWaitlists = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostV1UsersByUserIdWaitlistsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostV1UsersByUserIdWaitlistsResponse, PostV1UsersByUserIdWaitlistsError, ThrowOnError>({
        ...options,
        url: '/v1/users/{user_id}/waitlists'
    });
};

export const deleteV1UsersByUserIdWaitlistsByWaitlistId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteV1UsersByUserIdWaitlistsByWaitlistIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteV1UsersByUserIdWaitlistsByWaitlistIdResponse, DeleteV1UsersByUserIdWaitlistsByWaitlistIdError, ThrowOnError>({
        ...options,
        url: '/v1/users/{user_id}/waitlists/{waitlist_id}'
    });
};